name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # Setup PostgreSQL for tests
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: event_app_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma client
        run: npx prisma generate
      
      - name: Run linting
        run: npm run lint
      
      - name: Run unit tests
        run: npm test
        
      - name: Setup database for E2E tests
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/event_app_test
          
      # Build the application
      - name: Build application
        run: npm run build
        
      # Install Playwright browsers
      - name: Install Playwright browsers
        run: npm run e2e:install
        
      # Create a temporary Playwright config for CI
      - name: Create CI-specific Playwright config
        run: |
          cat > playwright.config.ci.js << EOF
          import { defineConfig, devices } from '@playwright/test';
          export default defineConfig({
            testDir: './e2e/specs',
            fullyParallel: true,
            forbidOnly: true,
            retries: 2,
            workers: 1,
            reporter: 'github',
            use: {
              baseURL: 'http://localhost:3000',
              trace: 'on-first-retry',
              screenshot: 'only-on-failure',
            },
            projects: [
              {
                name: 'chromium',
                use: { ...devices['Desktop Chrome'] },
              }
            ],
            webServer: {
              command: 'npm run start',
              url: 'http://localhost:3000',
              reuseExistingServer: false,
              timeout: 120000,
            },
          });
          EOF
        
      # Run E2E tests with the CI config
      - name: Run E2E tests
        run: npx playwright test --config=playwright.config.ci.js
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/event_app_test
          NODE_ENV: production
          CI: true