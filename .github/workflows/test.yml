name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Setup known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ec2-3-220-149-40.compute-1.amazonaws.com >> ~/.ssh/known_hosts
      
      - name: Deploy to EC2
        run: |
          ssh ubuntu@ec2-3-220-149-40.compute-1.amazonaws.com << 'EOF'
            # Navigate to the project directory
            cd ~/event-webapp
            
            # Configure git pull strategy
            git config pull.rebase false
            
            # Reset any local changes to avoid conflicts
            git reset --hard HEAD
            
            # Pull latest changes
            git pull origin main
            
            # Install dependencies
            npm ci
            
            # Set up environment variables
            echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/event_app_prod" > .env
            
            # Generate Prisma client
            npx prisma generate
            
            # Run migrations if needed (this might require additional configuration)
            # npx prisma migrate deploy
            
            # Build the application
            npm run build
            
          
            
            # Ensure certs directory exists
            mkdir -p ~/event-webapp/certs
            
            # Copy certificates if they don't exist
            if [ ! -f ~/event-webapp/certs/privatekey.pem ]; then
              sudo cp /etc/ssl/private/privatekey.pem ~/event-webapp/certs/
              sudo cp /etc/ssl/certs/server.crt ~/event-webapp/certs/
              sudo chown ubuntu:ubuntu ~/event-webapp/certs/*
            fi
            
            # Restart the application with PM2
            pm2 restart event-webapp || pm2 start npm --name "event-webapp" -- start
            
            # Save PM2 state
            pm2 save
          EOF